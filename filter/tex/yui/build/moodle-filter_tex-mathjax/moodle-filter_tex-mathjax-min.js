YUI.add("moodle-filter_tex-mathjax",function(e,t){M.filter_tex=M.filter_tex||{},M.filter_tex.showSource=function(){e.all(".texrender").each(function(t){e.one("body").insert('<span class="texsource" style="display: inline">\\['+t.getAttribute("alt")+"\\]</span> ",t.ancestor()),t.setStyle("display","none")})},M.filter_tex.init=function(){MathJax.Hub.Config({tex2jax:{inlineMath:[["$$","$$"],["\\(","\\)"],["%i","%i"]],displayMath:[["\\[$ $$","$$ $\\]"],["\\[","\\]"],["%d","%d"]]}}),MathJax.Hub.Configured(),MathJax.Hub.Queue(function(){e.all(".texrender").each(function(t){var n="\\("+t.getAttribute("alt")+"\\)";n=n.replace(/\\\(\$ \$\$(.*)\$\$ \$\\\)/,"\\[$1\\]"),e.one("body").insert('<span class="texsource" style="display: none">'+n+"</span> ",t.ancestor())})}),MathJax.Hub.Queue(["Typeset",MathJax.Hub]),MathJax.Hub.Queue(function(){e.all(".texrender").each(function(e){e.setStyle("display","none")}),e.all(".texsource").each(function(e){e.setStyle("display","inline")})})}},"@VERSION@",{requires:["base","node"]});
